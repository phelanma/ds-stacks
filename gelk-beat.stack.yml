version: "3.4"

services:

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.2.0
    environment:
      - "discovery.type=single-node"
    networks:
      - data-net
      - public-net
    volumes:
      - elasticsearch_storage:/usr/share/elasticsearch/data
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      placement:
        constraints:
          - node.role==manager
        preferences:
          - spread: node.id
      labels:
        - "traefik.frontend.rule=HostRegexp:es.local.docker.net"
        - traefik.enable=true
        - traefik.port=9200
        - traefik.tags=public-net
        - "traefik.docker.network=public-net"
        - traefik.webservice.frontend.entryPoints=http,https

  logstash:
    image: docker.elastic.co/logstash/logstash:7.2.0
    volumes:
      - "./config/logstash/pipeline/logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro"
      - "./config/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro"
    networks:
      - data-net
      - monitoring-net
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      placement:
        constraints:
          - node.role==manager
        preferences:
          - spread: node.id

  grafana:
    image: grafana/grafana:6.2.5
    environment:
      - "GF_SERVER_ROOT_URL=http://grafana.local.docker.net"
      - "GF_SERVER_HTTP_PORT=9000"
      - GF_INSTALL_PLUGINS=grafana-clock-panel,briangann-gauge-panel,natel-plotly-panel,grafana-simple-json-datasource
    networks:
      - data-net
      - public-net
    volumes:
      - grafana_storage:/var/lib/grafana
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      placement:
        constraints:
          - node.role==manager
        preferences:
          - spread: node.id
      labels:
        - "traefik.frontend.rule=HostRegexp:grafana.local.docker.net"
        - traefik.enable=true
        - traefik.port=9000
        - traefik.tags=public-net
        - "traefik.docker.network=public-net"
        - traefik.webservice.frontend.entryPoints=http,https

  kibana:
    image: docker.elastic.co/kibana/kibana:7.2.0
    environment:
      - "ELASTICSEARCH_HOSTS=http://elasticsearch:9200"
    networks:
      - public-net
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      placement:
        constraints:
          - node.role==manager
        preferences:
          - spread: node.id
      labels:
        - "traefik.frontend.rule=HostRegexp:kibana.local.docker.net"
        - traefik.enable=true
        - traefik.port=5601
        - traefik.tags=public-net
        - "traefik.docker.network=public-net"
        - traefik.webservice.frontend.entryPoints=http,https

  filebeat:
    image: docker.elastic.co/beats/filebeat:7.2.0
    networks:
      - monitoring-net
    volumes:
      - "./config/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro"
    deploy:
      mode: global
      placement:
        preferences:
          - spread: node.id
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

networks:
  public-net:
    external: true
  data-net:
    external: true
  monitoring-net:
    external: true

volumes:
  grafana_storage:
  elasticsearch_storage:
