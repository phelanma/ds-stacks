version: '3.4'
services:
  consul-leader:
    image: consul:1.5.2
    command:
      - agent
      - "-server"
      - "-client=0.0.0.0"
      - "-bootstrap"
      - "-ui"
      - "-ui-content-path=/consul"
    volumes:
      - consul-data-leader:/consul/data
    environment:
      - 'CONSUL_BIND_INTERFACE=eth0'
      - 'CONSUL_LOCAL_CONFIG={"leave_on_terminate": true}'
    networks:
      - public-net
    deploy:
      labels:
        - "traefik.frontend.rule=PathPrefix:/consul,/consul/v1,/v1"
        - traefik.enable=true
        - traefik.port=8500
        - traefik.tags=${TRAEFIK_PUBLIC_TAG:-public-net}
        - "traefik.docker.network=public-net"
        # Traefik service that listens to HTTP
        # - traefik.redirectorservice.frontend.entryPoints=http
        # - traefik.redirectorservice.frontend.redirect.entryPoint=https
        # Traefik service that listens to HTTPS
        - traefik.webservice.frontend.entryPoints=http,https
        #        - traefik.frontend.auth.basic.users=${USERNAME}:${HASHED_PASSWORD}
  consul-replica:
    image: consul:1.5.2
    command: agent -server -client=0.0.0.0 -retry-join="consul-leader"
    volumes:
      - consul-data-replica:/consul/data
    environment:
      - CONSUL_BIND_INTERFACE=eth0
      - 'CONSUL_LOCAL_CONFIG={"leave_on_terminate": true}'
    networks:
      - public-net
    deploy:
      replicas: ${CONSUL_REPLICAS:-3}
      placement:
        preferences:
          - spread: node.id
  traefik:
    image: traefik:1.7.12
    ports:
      - target: 80
        published: 80
        mode: host
      - target: 443
        published: 443
        mode: host
    deploy:
      replicas: ${TRAEFIK_REPLICAS:-2}
      placement:
        constraints:
          - node.role==manager
        preferences:
          - spread: node.id
      labels:
        - traefik.frontend.rule=PathPrefixStripRegex:/traefik
        - "traefik.enable=true"
        - "traefik.port=8080"
        - "traefik.tags=public-net"
        - "traefik.docker.network=public-net"
        # Traefik service that listens to HTTP
        # - traefik.redirectorservice.frontend.entryPoints=http
        # - traefik.redirectorservice.frontend.redirect.entryPoint=https
        # Traefik service that listens to HTTPS
        - traefik.webservice.frontend.entryPoints=http,https
        #        - traefik.frontend.auth.basic.users=${USERNAME}:${HASHED_PASSWORD}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command:
      - "--docker"
      - "--docker.swarmmode"
      - "--docker.watch"
      - "--docker.exposedbydefault=false"
      - "--constraints=tag==public-net"
      - "--entrypoints=Name:http Address::80"
      - "--entrypoints=Name:https Address::443 TLS"
      - "--consul"
      - "--consul.endpoint=consul-leader:8500"
      # - "--acme"
      # - "--acme.storage="traefik/acme/account""
      # - "--acme.entryPoint=https"
      # - "--acme.httpChallenge.entryPoint=http"
      # - "--acme.onhostrule=true"
      # - "--acme.acmelogging=true"
      - "--logLevel=INFO"
      - "--accessLog"
      - "--api"
    networks:
      - public-net
    depends_on:
      - consul-leader

volumes:
  consul-data-leader:
  consul-data-replica:

networks:
  proxy-net:
    external: true
  public-net:
    external: true
